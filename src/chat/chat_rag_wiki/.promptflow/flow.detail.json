{
  "flow_runs": [
    {
      "run_id": "ca3c7ef4-2c86-45ab-81e1-7d0b284e0f3f_0",
      "status": "Failed",
      "error": {
        "message": "OpenAI API hits AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com), or have expired.'} [Error reference: https://platform.openai.com/docs/guides/error-codes/api-errors]",
        "messageFormat": "",
        "messageParameters": {},
        "referenceCode": "Tool/promptflow.tools.aoai",
        "code": "UserError",
        "innerError": {
          "code": "OpenAIError",
          "innerError": {
            "code": "AuthenticationError",
            "innerError": null
          }
        },
        "debugInfo": {
          "type": "WrappedOpenAIError",
          "message": "OpenAI API hits AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com), or have expired.'} [Error reference: https://platform.openai.com/docs/guides/error-codes/api-errors]",
          "stackTrace": "\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/executor/flow_executor.py\", line 926, in _exec\n    output, aggregation_inputs = self._exec_inner_with_trace(\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/executor/flow_executor.py\", line 836, in _exec_inner_with_trace\n    output, aggregation_inputs = self._exec_inner(\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/executor/flow_executor.py\", line 865, in _exec_inner\n    output, nodes_outputs = self._traverse_nodes(inputs, context)\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/executor/flow_executor.py\", line 1106, in _traverse_nodes\n    nodes_outputs, bypassed_nodes = self._submit_to_scheduler(context, inputs, batch_nodes)\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/executor/flow_executor.py\", line 1143, in _submit_to_scheduler\n    return scheduler.execute(self._line_timeout_sec)\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/executor/_flow_nodes_scheduler.py\", line 89, in execute\n    raise e\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/executor/_flow_nodes_scheduler.py\", line 72, in execute\n    self._dag_manager.complete_nodes(self._collect_outputs(completed_futures))\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/executor/_flow_nodes_scheduler.py\", line 113, in _collect_outputs\n    each_node_result = each_future.result()\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/concurrent/futures/_base.py\", line 437, in result\n    return self.__get_result()\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/concurrent/futures/_base.py\", line 389, in __get_result\n    raise self._exception\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/concurrent/futures/thread.py\", line 57, in run\n    result = self.fn(*self.args, **self.kwargs)\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/executor/_flow_nodes_scheduler.py\", line 134, in _exec_single_node_in_thread\n    result = context.invoke_tool(node, f, kwargs=kwargs)\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/_core/flow_execution_context.py\", line 87, in invoke_tool\n    result = self._invoke_tool_inner(node, f, kwargs)\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/_core/flow_execution_context.py\", line 197, in _invoke_tool_inner\n    raise e\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/_core/flow_execution_context.py\", line 178, in _invoke_tool_inner\n    return f(**kwargs)\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/tracing/_trace.py\", line 380, in wrapped\n    output = func(*args, **kwargs)\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/tools/common.py\", line 381, in wrapper\n    raise WrappedOpenAIError(e)\n",
          "innerException": {
            "type": "AuthenticationError",
            "message": "Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com), or have expired.'}",
            "stackTrace": "Traceback (most recent call last):\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/tools/common.py\", line 353, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/tools/aoai.py\", line 154, in chat\n    completion = self._client.chat.completions.create(**params)\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/tracing/_integrations/_openai_injector.py\", line 88, in wrapper\n    return f(*args, **kwargs)\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/tracing/_trace.py\", line 380, in wrapped\n    output = func(*args, **kwargs)\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/openai/_utils/_utils.py\", line 277, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/openai/resources/chat/completions.py\", line 606, in create\n    return self._post(\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/openai/_base_client.py\", line 1240, in post\n    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/openai/_base_client.py\", line 921, in request\n    return self._request(\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/openai/_base_client.py\", line 1020, in _request\n    raise self._make_status_error_from_response(err.response) from None\n",
            "innerException": null
          }
        }
      },
      "inputs": {
        "input": "What is Herbert Hoover known for?"
      },
      "output": null,
      "metrics": null,
      "request": null,
      "parent_run_id": "ca3c7ef4-2c86-45ab-81e1-7d0b284e0f3f",
      "root_run_id": "ca3c7ef4-2c86-45ab-81e1-7d0b284e0f3f",
      "source_run_id": null,
      "flow_id": "chat_with_wikipedia",
      "start_time": "2024-06-07T19:38:07.305870Z",
      "end_time": "2024-06-07T19:38:08.199676Z",
      "index": 0,
      "api_calls": [
        {
          "name": "flow",
          "node_name": "flow",
          "type": "Flow",
          "start_time": 1717807087.30587,
          "end_time": 1717807088.199676,
          "children": [
            {
              "name": "AzureOpenAI.chat",
              "type": "Function",
              "inputs": {
                "prompt": "system:\nYou are an AI assistant tasked with turning human input into a searchable term. Given an input question or topic, infer a topic that should be used in a search.\n\nThe conversation history is provided just in case of a coreference (e.g. \"What is this?\" where \"this\" is defined in previous conversation).\n\nReturn the output as query used for next round user message.\n\n## EXAMPLE 1 ##\nuser:\nHuman: Tell me about George Washington?\n\nOutput: George Washington\n## END of EXAMPLE ##\n\n## EXAMPLE 2 ##\nHuman: What is it like at the Taj Mahal?\n\nOutput: Taj Mahal\n## END OF EXAMPLE ##\n\nHuman: {{question}}\n\nOutput:",
                "deployment_name": "gpt4-deployment",
                "temperature": 0.0,
                "question": "What is Herbert Hoover known for?"
              },
              "output": null,
              "start_time": 1717807087.307992,
              "end_time": 1717807088.16252,
              "error": {
                "message": "OpenAI API hits AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com), or have expired.'} [Error reference: https://platform.openai.com/docs/guides/error-codes/api-errors]",
                "type": "WrappedOpenAIError"
              },
              "children": [
                {
                  "name": "openai.resources.chat.completions.Completions.create",
                  "type": "LLM",
                  "inputs": {
                    "model": "gpt4-deployment",
                    "messages": [
                      {
                        "role": "system",
                        "content": "You are an AI assistant tasked with turning human input into a searchable term. Given an input question or topic, infer a topic that should be used in a search.\n\nThe conversation history is provided just in case of a coreference (e.g. \"What is this?\" where \"this\" is defined in previous conversation).\n\nReturn the output as query used for next round user message.\n\n## EXAMPLE 1 ##"
                      },
                      {
                        "role": "user",
                        "content": "Human: Tell me about George Washington?\n\nOutput: George Washington\n## END of EXAMPLE ##\n\n## EXAMPLE 2 ##\nHuman: What is it like at the Taj Mahal?\n\nOutput: Taj Mahal\n## END OF EXAMPLE ##\n\nHuman: What is Herbert Hoover known for?\n\nOutput:"
                      }
                    ],
                    "temperature": 0.0,
                    "top_p": 1.0,
                    "n": 1,
                    "stream": false,
                    "presence_penalty": 0.0,
                    "frequency_penalty": 0.0,
                    "user": ""
                  },
                  "output": null,
                  "start_time": 1717807087.31035,
                  "end_time": 1717807088.161625,
                  "error": {
                    "message": "Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com), or have expired.'}",
                    "type": "AuthenticationError"
                  },
                  "children": [],
                  "node_name": null,
                  "parent_id": "477b90bd-9162-4a2f-87ef-e689d7d530ea",
                  "id": "8b570136-26c0-42c7-9487-a4e9cce78f29",
                  "system_metrics": {}
                }
              ],
              "node_name": "extract_topic",
              "parent_id": "",
              "id": "477b90bd-9162-4a2f-87ef-e689d7d530ea",
              "system_metrics": {}
            }
          ],
          "system_metrics": {
            "duration": 0.893806,
            "prompt_tokens": 0,
            "completion_tokens": 0,
            "total_tokens": 0
          },
          "inputs": {
            "input": "What is Herbert Hoover known for?"
          },
          "output": null,
          "error": {
            "message": "OpenAI API hits AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com), or have expired.'} [Error reference: https://platform.openai.com/docs/guides/error-codes/api-errors]",
            "messageFormat": "",
            "messageParameters": {},
            "referenceCode": "Tool/promptflow.tools.aoai",
            "code": "UserError",
            "innerError": {
              "code": "OpenAIError",
              "innerError": {
                "code": "AuthenticationError",
                "innerError": null
              }
            },
            "debugInfo": {
              "type": "WrappedOpenAIError",
              "message": "OpenAI API hits AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com), or have expired.'} [Error reference: https://platform.openai.com/docs/guides/error-codes/api-errors]",
              "stackTrace": "\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/executor/flow_executor.py\", line 926, in _exec\n    output, aggregation_inputs = self._exec_inner_with_trace(\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/executor/flow_executor.py\", line 836, in _exec_inner_with_trace\n    output, aggregation_inputs = self._exec_inner(\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/executor/flow_executor.py\", line 865, in _exec_inner\n    output, nodes_outputs = self._traverse_nodes(inputs, context)\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/executor/flow_executor.py\", line 1106, in _traverse_nodes\n    nodes_outputs, bypassed_nodes = self._submit_to_scheduler(context, inputs, batch_nodes)\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/executor/flow_executor.py\", line 1143, in _submit_to_scheduler\n    return scheduler.execute(self._line_timeout_sec)\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/executor/_flow_nodes_scheduler.py\", line 89, in execute\n    raise e\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/executor/_flow_nodes_scheduler.py\", line 72, in execute\n    self._dag_manager.complete_nodes(self._collect_outputs(completed_futures))\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/executor/_flow_nodes_scheduler.py\", line 113, in _collect_outputs\n    each_node_result = each_future.result()\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/concurrent/futures/_base.py\", line 437, in result\n    return self.__get_result()\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/concurrent/futures/_base.py\", line 389, in __get_result\n    raise self._exception\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/concurrent/futures/thread.py\", line 57, in run\n    result = self.fn(*self.args, **self.kwargs)\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/executor/_flow_nodes_scheduler.py\", line 134, in _exec_single_node_in_thread\n    result = context.invoke_tool(node, f, kwargs=kwargs)\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/_core/flow_execution_context.py\", line 87, in invoke_tool\n    result = self._invoke_tool_inner(node, f, kwargs)\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/_core/flow_execution_context.py\", line 197, in _invoke_tool_inner\n    raise e\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/_core/flow_execution_context.py\", line 178, in _invoke_tool_inner\n    return f(**kwargs)\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/tracing/_trace.py\", line 380, in wrapped\n    output = func(*args, **kwargs)\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/tools/common.py\", line 381, in wrapper\n    raise WrappedOpenAIError(e)\n",
              "innerException": {
                "type": "AuthenticationError",
                "message": "Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com), or have expired.'}",
                "stackTrace": "Traceback (most recent call last):\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/tools/common.py\", line 353, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/tools/aoai.py\", line 154, in chat\n    completion = self._client.chat.completions.create(**params)\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/tracing/_integrations/_openai_injector.py\", line 88, in wrapper\n    return f(*args, **kwargs)\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/tracing/_trace.py\", line 380, in wrapped\n    output = func(*args, **kwargs)\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/openai/_utils/_utils.py\", line 277, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/openai/resources/chat/completions.py\", line 606, in create\n    return self._post(\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/openai/_base_client.py\", line 1240, in post\n    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/openai/_base_client.py\", line 921, in request\n    return self._request(\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/openai/_base_client.py\", line 1020, in _request\n    raise self._make_status_error_from_response(err.response) from None\n",
                "innerException": null
              }
            }
          }
        }
      ],
      "name": "",
      "description": "",
      "tags": null,
      "system_metrics": {
        "duration": 0.893806,
        "prompt_tokens": 0,
        "completion_tokens": 0,
        "total_tokens": 0
      },
      "result": null,
      "upload_metrics": false
    }
  ],
  "node_runs": [
    {
      "node": "extract_topic",
      "flow_run_id": "ca3c7ef4-2c86-45ab-81e1-7d0b284e0f3f",
      "run_id": "ca3c7ef4-2c86-45ab-81e1-7d0b284e0f3f_extract_topic_0",
      "status": "Failed",
      "inputs": {
        "deployment_name": "gpt4-deployment",
        "temperature": 0.0,
        "question": "What is Herbert Hoover known for?"
      },
      "output": null,
      "metrics": null,
      "error": {
        "message": "OpenAI API hits AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com), or have expired.'} [Error reference: https://platform.openai.com/docs/guides/error-codes/api-errors]",
        "messageFormat": "",
        "messageParameters": {},
        "referenceCode": "Tool/promptflow.tools.aoai",
        "code": "UserError",
        "innerError": {
          "code": "OpenAIError",
          "innerError": {
            "code": "AuthenticationError",
            "innerError": null
          }
        },
        "debugInfo": {
          "type": "WrappedOpenAIError",
          "message": "OpenAI API hits AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com), or have expired.'} [Error reference: https://platform.openai.com/docs/guides/error-codes/api-errors]",
          "stackTrace": "\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/_core/flow_execution_context.py\", line 87, in invoke_tool\n    result = self._invoke_tool_inner(node, f, kwargs)\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/_core/flow_execution_context.py\", line 197, in _invoke_tool_inner\n    raise e\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/_core/flow_execution_context.py\", line 178, in _invoke_tool_inner\n    return f(**kwargs)\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/tracing/_trace.py\", line 380, in wrapped\n    output = func(*args, **kwargs)\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/tools/common.py\", line 381, in wrapper\n    raise WrappedOpenAIError(e)\n",
          "innerException": {
            "type": "AuthenticationError",
            "message": "Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com), or have expired.'}",
            "stackTrace": "Traceback (most recent call last):\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/tools/common.py\", line 353, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/tools/aoai.py\", line 154, in chat\n    completion = self._client.chat.completions.create(**params)\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/tracing/_integrations/_openai_injector.py\", line 88, in wrapper\n    return f(*args, **kwargs)\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/promptflow/tracing/_trace.py\", line 380, in wrapped\n    output = func(*args, **kwargs)\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/openai/_utils/_utils.py\", line 277, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/openai/resources/chat/completions.py\", line 606, in create\n    return self._post(\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/openai/_base_client.py\", line 1240, in post\n    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/openai/_base_client.py\", line 921, in request\n    return self._request(\n  File \"/home/zacksoenen/miniconda3/envs/llmops/lib/python3.8/site-packages/openai/_base_client.py\", line 1020, in _request\n    raise self._make_status_error_from_response(err.response) from None\n",
            "innerException": null
          }
        }
      },
      "parent_run_id": "ca3c7ef4-2c86-45ab-81e1-7d0b284e0f3f_0",
      "start_time": "2024-06-07T19:38:07.307738Z",
      "end_time": "2024-06-07T19:38:08.198242Z",
      "index": 0,
      "api_calls": [
        {
          "name": "AzureOpenAI.chat",
          "type": "Function",
          "inputs": {
            "prompt": "system:\nYou are an AI assistant tasked with turning human input into a searchable term. Given an input question or topic, infer a topic that should be used in a search.\n\nThe conversation history is provided just in case of a coreference (e.g. \"What is this?\" where \"this\" is defined in previous conversation).\n\nReturn the output as query used for next round user message.\n\n## EXAMPLE 1 ##\nuser:\nHuman: Tell me about George Washington?\n\nOutput: George Washington\n## END of EXAMPLE ##\n\n## EXAMPLE 2 ##\nHuman: What is it like at the Taj Mahal?\n\nOutput: Taj Mahal\n## END OF EXAMPLE ##\n\nHuman: {{question}}\n\nOutput:",
            "deployment_name": "gpt4-deployment",
            "temperature": 0.0,
            "question": "What is Herbert Hoover known for?"
          },
          "output": null,
          "start_time": 1717807087.307992,
          "end_time": 1717807088.16252,
          "error": {
            "message": "OpenAI API hits AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com), or have expired.'} [Error reference: https://platform.openai.com/docs/guides/error-codes/api-errors]",
            "type": "WrappedOpenAIError"
          },
          "children": [
            {
              "name": "openai.resources.chat.completions.Completions.create",
              "type": "LLM",
              "inputs": {
                "model": "gpt4-deployment",
                "messages": [
                  {
                    "role": "system",
                    "content": "You are an AI assistant tasked with turning human input into a searchable term. Given an input question or topic, infer a topic that should be used in a search.\n\nThe conversation history is provided just in case of a coreference (e.g. \"What is this?\" where \"this\" is defined in previous conversation).\n\nReturn the output as query used for next round user message.\n\n## EXAMPLE 1 ##"
                  },
                  {
                    "role": "user",
                    "content": "Human: Tell me about George Washington?\n\nOutput: George Washington\n## END of EXAMPLE ##\n\n## EXAMPLE 2 ##\nHuman: What is it like at the Taj Mahal?\n\nOutput: Taj Mahal\n## END OF EXAMPLE ##\n\nHuman: What is Herbert Hoover known for?\n\nOutput:"
                  }
                ],
                "temperature": 0.0,
                "top_p": 1.0,
                "n": 1,
                "stream": false,
                "presence_penalty": 0.0,
                "frequency_penalty": 0.0,
                "user": ""
              },
              "output": null,
              "start_time": 1717807087.31035,
              "end_time": 1717807088.161625,
              "error": {
                "message": "Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com), or have expired.'}",
                "type": "AuthenticationError"
              },
              "children": [],
              "node_name": null,
              "parent_id": "477b90bd-9162-4a2f-87ef-e689d7d530ea",
              "id": "8b570136-26c0-42c7-9487-a4e9cce78f29",
              "system_metrics": {}
            }
          ],
          "node_name": "extract_topic",
          "parent_id": "",
          "id": "477b90bd-9162-4a2f-87ef-e689d7d530ea",
          "system_metrics": {}
        }
      ],
      "cached_run_id": null,
      "cached_flow_run_id": null,
      "logs": {
        "stdout": "",
        "stderr": "[2024-06-07T19:38:08+0000] Exception occurs: AuthenticationError: Error code: 401 - {'statusCode': 401, 'message': 'Unauthorized. Access token is missing, invalid, audience is incorrect (https://cognitiveservices.azure.com), or have expired.'}\n"
      },
      "system_metrics": {
        "duration": 0.890504
      },
      "result": null
    }
  ]
}